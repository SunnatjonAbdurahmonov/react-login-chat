{"version":3,"sources":["util/const.js","components/Navbar.js","components/Login.js","components/Loader.js","components/Chat.js","components/routes.js","components/AppRouter.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","AppBar","position","Toolbar","variant","Grid","container","justify","Button","onClick","signOut","to","Login","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","Container","alignItems","justifyContent","style","height","window","innerHeight","width","background","Box","p","Loader","className","Chat","publicRoutes","path","Component","privateRoutes","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","marginTop","border","overflowX","map","message","margin","backgroundColor","marginLeft","padding","borderRadius","display","Avatar","src","direction","TextField","onChange","e","target","placeholder","fullWidth","color","AppRouter","component","exact","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.1f871923.chunk.js","sourcesContent":["export const LOGIN_ROUTE = \"/login\";\nexport const CHAT_ROUTE = \"/chat\";","import React, {useContext} from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../App.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { LOGIN_ROUTE } from \"../util/const\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Context } from \"..\";\n\nexport default function Navbar() {\n  const { auth } = useContext(Context);\n  const [user] = useAuthState(auth);\n\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <h3>Sunnatjon</h3>\n          <Grid container justify={\"flex-end\"}>\n            {user ? (\n              <Button onClick={() => auth.signOut()} variant={\"outlined\"}>EXIT</Button>\n            ) : (\n              <NavLink to={LOGIN_ROUTE}>\n                <Button variant={\"outlined\"}>LOGIN</Button>\n              </NavLink>\n            )}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { Box, Button, Container, Grid } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../index\";\nimport firebase from 'firebase/compat'\n\nfunction Login() {\n  const { auth } = useContext(Context);\n  const login = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const { user } = await auth.signInWithPopup(provider);\n    console.log(user);\n  };\n\n  return (\n    <Container>\n      <Grid\n        container\n        alignItems={\"center\"}\n        justifyContent={\"center\"}\n        style={{ height: window.innerHeight - 50 }}>\n        <Grid\n          style={{ width: 400, background: \"lightgray\" }}\n          container\n          alignItems={\"center\"}\n          justifyContent={\"center\"}>\n          <Box p={5}>\n            <Button onClick={login} variant={\"outlined\"}>\n              Login With Google\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport {Container, Grid } from \"@material-ui/core\";\n\nfunction Loader() {\n  return (\n    <Container>\n      <Grid\n        container\n        alignItems={\"center\"}\n        justify={\"center\"}\n        style={{ height: window.innerHeight - 50 }}>\n        <Grid container alignItems={\"center\"} justifyContent={\"center\"}>\n          <div className=\"loadingio-spinner-eclipse-zmhsiiiy0at\">\n            <div className=\"ldio-dz7k6orv7k7\">\n              <div></div>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Loader;\n","import { Avatar, Button, Container, Grid, TextField } from \"@material-ui/core\";\nimport React, { useContext, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Context } from \"..\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport Loader from \"./Loader\";\nimport firebase from \"firebase/compat\";\n\nfunction Chat() {\n  const { auth, firestore } = useContext(Context);\n  const [user] = useAuthState(auth);\n  const [value, setValue] = useState(\"\");\n  const [messages, loading] = useCollectionData(\n    firestore.collection(\"messages\").orderBy(\"createdAt\")\n  );\n\n  const sendMessage = async () => {\n    firestore.collection(\"messages\").add({\n      uid: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      text: value,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setValue(\"\");\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <Container>\n      <Grid\n        container\n        style={{ height: window.innerHeight - 50, marginTop: 10 }}\n        justifyContent={\"center\"}>\n        <div\n          style={{\n            width: \"80%\",\n            height: \"60vh\",\n            border: \"1px solid gray\",\n            overflowX: \"auto\",\n            background: \"linear-gradient(-45deg, #39249a, #e14e42)\"\n          }}>\n          {messages.map((message) => (\n            <div\n              style={{\n                margin: 10,\n                backgroundColor:\n                  user.uid === message.uid \n                    ? \"rgba(255, 255, 255, 0.7)\"\n                    : \"rgba(228, 83, 167, 0.549)\",\n                marginLeft: user.uid === message.uid ? \"auto\" : \"10px\",\n                width: \"40%\",\n                padding: 5,\n                borderRadius: \"10px\",\n              }}>\n              <Grid container\n                  style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}\n              >\n                <Avatar src={message.photoURL} />\n                <div> {message.displayName} </div>\n              </Grid>\n              <div style={{marginTop: 7}}> {message.text} </div>\n            </div>\n          ))}\n        </div>\n        <Grid\n          container\n          direction={\"column\"}\n          alignItems={\"flex-end\"}\n          style={{ width: \"80%\" }}>\n          <TextField\n            onChange={(e) => setValue(e.target.value)}\n            value={value}\n            placeholder={\"Message\"}\n            fullWidth\n            variant={\"outlined\"}\n          />\n          <Button\n            onClick={sendMessage}\n            variant={\"outlined\"}\n            style={{ background: \"green\", marginTop: 5, color: \"white\" }}>\n            Send Message\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Chat;\n","import { CHAT_ROUTE, LOGIN_ROUTE } from \"../util/const\";\nimport Login from \"../components/Login\";\nimport Chat from \"../components/Chat\";\n\nexport const publicRoutes = [\n  {\n    path: LOGIN_ROUTE,\n    Component: Login,\n  },\n];\n\nexport const privateRoutes = [\n  {\n    path: CHAT_ROUTE,\n    Component: Chat,\n  },\n];\n","import React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { CHAT_ROUTE, LOGIN_ROUTE } from \"../util/const\";\nimport { privateRoutes, publicRoutes } from \"./routes\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Context } from \"..\";\n\nfunction AppRouter() {\n  const { auth } = useContext(Context);\n  const [user] = useAuthState(auth);\n  console.log(user);\n\n  return user ? (\n    <Switch>\n      {privateRoutes.map(({ path, Component }) => (\n        <Route key={path} path={path} component={Component} exact={true} />\n      ))}\n      <Redirect to={CHAT_ROUTE} />\n    </Switch>\n  ) : (\n    <Switch>\n      {publicRoutes.map(({ path, Component }) => (\n        <Route key={path} path={path} component={Component} exact={true} />\n      ))}\n      <Redirect to={LOGIN_ROUTE} />\n    </Switch>\n  );\n}\n\nexport default AppRouter;\n","import React, { useContext } from \"react\";\nimport \"./App.css\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport Navbar from \"./components/Navbar\"\nimport AppRouter from \"./components/AppRouter\";\nimport { Context } from \".\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nfunction App() {\n  const { auth } = useContext(Context);\n  const [user, loading, error] = useAuthState(auth);\n  if(loading) {\n    return <Loader  />\n  }\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React, { createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./App.css\";\n// import firebase from \"\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\"\nimport firebase from 'firebase/compat'\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDCDBUg1ghQ3MpJQEpXhWIJ7H5UnDeigoA\",\n  authDomain: \"react-login-chat.firebaseapp.com\",\n  projectId: \"react-login-chat\",\n  storageBucket: \"react-login-chat.appspot.com\",\n  messagingSenderId: \"955663512254\",\n  appId: \"1:955663512254:web:dc0dd0e92d858efa57e4ef\",\n  measurementId: \"G-L27RFR6V8X\",\n});\n\n\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nReactDOM.render(\n  <Context.Provider value={{firestore, auth, firebase}}>\n    <App />\n  </Context.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}